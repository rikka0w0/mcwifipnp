plugins {
  id 'eclipse'
  id 'idea'
  id 'net.minecraftforge.gradle' version '[6.0.24,6.2)'
  id 'org.spongepowered.mixin' version '0.7.+'
}

java.toolchain.languageVersion = JavaLanguageVersion.of(21)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"

version = project.mod_version + "-" + project.minecraft_version + "-forge"
group = project.mod_group_id

base {
  archivesName = project.mod_id
}

minecraft {
  mappings channel: 'official', version: project.minecraft_version
  reobf = false
  copyIdeResources = true

  runs {
    configureEach {
      workingDirectory project.file('run')
      property 'forge.logging.markers', 'REGISTRIES'
      property 'forge.logging.console.level', 'debug'
      arg '-torg.spongepowered.asm.launch.MixinTweaker'
      mods {
        "${mod_id}" {
          source sourceSets.main
        }
      }
    }
    client {
      property 'forge.enabledGameTestNamespaces', project.mod_id
    }
  }
}

dependencies {
  minecraft "net.minecraftforge:forge:${project.minecraft_version}-${project.forge_version}"
  annotationProcessor "org.spongepowered:mixin:0.8.5:processor"
  implementation('net.sf.jopt-simple:jopt-simple:5.0.4') { version { strictly '5.0.4' } }
}

sourceSets {
  main {
    java {
      srcDir "../src/main/java"
    }
    resources {
      srcDir "../src/main/resources"
      srcDir "src/generated/resources"
    }
  }
}

mixin {
  // MixinGradle Settings
  add sourceSets.main, 'mcwifipnp-refmap.json'
  config 'mcwifipnp.mixins.json'

  debug.verbose = true
  debug.export = true
}

tasks.named('jar', Jar).configure {
  manifest {
    attributes([
        "Specification-Title": "LAN World Plug-n-Play",
        "Specification-Vendor": "Satxm",
        "Specification-Version": "1",
        "Implementation-Title": project.name,
        "Implementation-Version": "${version}",
        "Implementation-Vendor": "Satxm",
        "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
        "MixinConfigs": "mcwifipnp.mixins.json"
    ])
  }
}

tasks.named('processResources', ProcessResources).configure {
  var replaceProperties = [
    mod_version : project.mod_version,
    forge_version_range : project.forge_version_range,
    minecraft_version_min : project.minecraft_version_min,
    minecraft_version_max : project.minecraft_version_max,
    forge_loader_version_range : project.forge_loader_version_range,
    pack_format_number: pack_format_number,
  ]
  inputs.properties replaceProperties
  filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) {
    expand replaceProperties + [project: project]
  }
}

tasks.withType(JavaCompile).configureEach {
  it.options.encoding = 'UTF-8'
  it.options.release = 21
}

java.withSourcesJar()

jar {
  from("../LICENSE") {
  }
}
